# Generated by Django 3.0.7 on 2020-06-23 18:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('web', '0011_auto_20200621_1820'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
        ),
        migrations.AlterField(
            model_name='product',
            name='group',
            field=models.CharField(choices=[('notebook', 'notebook'), ('pc', 'pc'), ('accessories', 'accessories'), ('mobile', 'mobile')], default='mobile', max_length=20),
        ),
        migrations.CreateModel(
            name='Pay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(default='User FF', max_length=255, verbose_name='ФИО клиента')),
                ('number', models.CharField(max_length=22, verbose_name='Телефон номер')),
                ('address', models.CharField(max_length=255, verbose_name='')),
                ('pay', models.PositiveIntegerField(choices=[(0, 'Наличные'), (1, 'Оплата картой')], default=0, verbose_name='Тип оплаты')),
                ('cart_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to='web.Cart', verbose_name='Корзина')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='product_id',
            field=models.ManyToManyField(related_name='products', to='web.Product', verbose_name='Товар'),
        ),
    ]
